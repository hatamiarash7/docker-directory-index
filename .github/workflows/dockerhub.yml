name: Dockerhub

on:
  schedule:
    - cron: "0 2 * * *"
  push:
    branches:
      - master

env:
  IMAGE_NAME: hatamiarash7/directory-index:latest
  TEST_IMAGE_NAME: localhost:5000/$IMAGE_NAME

jobs:
  test:
    runs-on: ubuntu-latest
    container: gitguardian/ggshield:latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Build and push to local registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - name: GitGuardian
        run: |
          ggshield scan docker ${{ env.TEST_IMAGE_NAME }}

      - name: Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.TEST_IMAGE_NAME }}
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }}

      - name: Build image
        run: >
          docker build
          -t ${{ env.IMAGE_NAME }}
          --build-arg DATE_CREATED=${{ steps.date.outputs.date }}
          -f Dockerfile
          .

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          docker push ${{ env.IMAGE_NAME }}
